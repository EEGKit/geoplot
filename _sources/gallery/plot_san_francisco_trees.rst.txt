.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_gallery_plot_san_francisco_trees.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_plot_san_francisco_trees.py:


Quadtree of San Francisco street trees
======================================

This example shows the geospatial nullity pattern (whether records are more or less likely to be
null in one region versus another) of a dataset on city-maintained street trees by species in San
Francisco.

In this case we see that there is small but significant amount of variation in the percentage
of trees classified per area, which ranges from 88% to 98%.

For more tools for visualizing data nullity, `check out the ``missingno`` library
<https://github.com/ResidentMario/missingno>`_.



.. image:: /gallery/images/sphx_glr_plot_san_francisco_trees_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /Users/alex/miniconda3/envs/geoplot-dev/lib/python3.6/site-packages/scipy/stats/stats.py:1633: FutureWarning: Using a non-tuple sequence for multidimensional indexing is deprecated; use `arr[tuple(seq)]` instead of `arr[seq]`. In the future this will be interpreted as an array index, `arr[np.array(seq)]`, which will result either in an error or a different result.
      return np.add.reduce(sorted[indexer] * weights, axis=axis) / sumval
    /Users/alex/Desktop/geoplot/geoplot/geoplot.py:461: UserWarning: The input data contains 1 data points that do not intersect with "clip". These data points will not appear in the plot.
      f'The input data contains {null_geoms.sum()} data points that do not '





|


.. code-block:: default


    import geopandas as gpd
    import geoplot as gplt
    import geoplot.crs as gcrs
    import matplotlib.pyplot as plt


    trees = gpd.read_file(gplt.datasets.get_path('san_francisco_street_trees_sample'))
    sf = gpd.read_file(gplt.datasets.get_path('san_francisco'))


    ax = gplt.quadtree(
        trees.assign(nullity=trees['Species'].notnull().astype(int)),
        projection=gcrs.AlbersEqualArea(),
        hue='nullity', nmax=1, cmap='Greens', scheme='Quantiles', legend=True,
        clip=sf, edgecolor='white', linewidth=1
    )
    gplt.polyplot(sf, facecolor='None', edgecolor='gray', linewidth=1, zorder=2, ax=ax)

    plt.savefig("san-francisco-street-trees.png", bbox_inches='tight', pad_inches=0)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  17.366 seconds)


.. _sphx_glr_download_gallery_plot_san_francisco_trees.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_san_francisco_trees.py <plot_san_francisco_trees.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_san_francisco_trees.ipynb <plot_san_francisco_trees.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
